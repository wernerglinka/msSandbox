@charset "UTF-8";
@import url("https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700");
/*! normalize.css v2.1.3 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* ==========================================================================
   Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* ==========================================================================
   Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* ==========================================================================
   Typography
   ========================================================================== */
/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em; }

/**
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap; }

/**
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* ==========================================================================
   Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0; }

/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden; }

/* ==========================================================================
   Figures
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0; }

/* ==========================================================================
   Forms
   ========================================================================== */
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* ==========================================================================
   Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

html:after {
  content: "js-breakpoints-getComputedStyleTest";
  visibility: hidden;
  position: absolute;
  clip: rect(0 0 0 0);
  overflow: hidden;
  width: 0;
  height: 0; }

@font-face {
  font-family: 'msSandbox';
  src: url("../fonts/msSandbox.eot?gdq7ki");
  src: url("../fonts/msSandbox.eot?gdq7ki#iefix") format("embedded-opentype"), url("../fonts/msSandbox.ttf?gdq7ki") format("truetype"), url("../fonts/msSandbox.woff?gdq7ki") format("woff"), url("../fonts/msSandbox.svg?gdq7ki#msSandbox") format("svg");
  font-weight: normal;
  font-style: normal; }

.icon {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'msSandbox' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-connection:before {
  content: ""; }

.icon-code:before {
  content: ""; }

.icon-feed:before {
  content: ""; }

.icon-checkmark:before {
  content: ""; }

.icon-user:before {
  content: ""; }

.icon-envelope:before {
  content: ""; }

.icon-search:before {
  content: ""; }

.icon-close:before {
  content: ""; }

.icon-play:before {
  content: ""; }

.icon-facebook:before {
  content: ""; }

.icon-github:before {
  content: ""; }

.icon-linkedin:before {
  content: ""; }

.icon-twitter:before {
  content: ""; }

.icon-youtube:before {
  content: ""; }

.icon-chevron-east:before {
  content: ""; }

.icon-chevron-north:before {
  content: ""; }

.icon-chevron-south:before {
  content: ""; }

.icon-chevron-west:before {
  content: ""; }

@media (min-width: 768px) {
  body:after {
    content: "GENERIC_BIG_SCREEN_BREAKPOINT";
    visibility: hidden;
    position: absolute;
    clip: rect(0 0 0 0);
    overflow: hidden;
    width: 0;
    height: 0; }
  body .js-breakpoints-GENERIC_BIG_SCREEN_BREAKPOINT {
    position: absolute; } }

/**
 * base styling
 */
* {
  box-sizing: border-box; }

*:before,
*:after {
  box-sizing: inherit; }

html,
footer {
  font-size: 100%;
  font-weight: 300;
  background-color: #333333; }

body {
  font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 100%;
  color: #333;
  background-color: #fff;
  padding: 0;
  margin: 0; }

h1 {
  font-size: 1.75em;
  font-weight: 300; }

h2 {
  font-size: 1.5em;
  font-weight: 300; }

h3 {
  color: #333;
  font-size: 1em;
  font-weight: 600;
  line-height: 1.5625;
  margin-bottom: 0; }

h1 + h4 {
  font-size: 1.25em;
  font-weight: 600; }

p {
  color: #333;
  font-size: 1em;
  line-height: 1.4;
  font-weight: 300; }
  p.center {
    text-align: center; }

input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

a {
  color: #f00;
  text-decoration: none;
  cursor: pointer;
  transition: color, background-color 0.5s; }
  a:hover, a:focus {
    text-decoration: none; }

.clearfix:before, .clearfix:after,
.container:before,
.container:after {
  content: " ";
  display: table; }

.clearfix:after,
.container:after {
  clear: both; }

.container {
  max-width: 1280px;
  margin: 0 auto; }

img {
  max-width: 100%;
  height: auto;
  display: inline-block; }

hr {
  margin: 1em 0; }

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0; }

.sr-only-focusable:active, .sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto; }

[role="button"] {
  cursor: pointer; }

.pull-left {
  float: left; }

.pull-right {
  float: right; }

[disabled],
.is-disabled {
  color: #ccc !important; }

.has-highlight {
  background-color: #f4f4f4 !important; }

.nowrap {
  white-space: nowrap;
  font-size: 1em !important; }

blockquote {
  padding: 20px;
  background-color: #f5f5f5;
  font-style: italic; }

.wide-screen-only {
  display: block; }

.narrow-screen-only {
  display: none; }

@media (max-width: 768px) {
  .wide-screen-only {
    display: none; }
  .narrow-screen-only {
    display: block; } }

.btn {
  display: inline-block;
  margin-bottom: 0;
  font-weight: 400;
  text-transform: uppercase;
  text-align: center;
  padding: 5px 20px;
  -ms-touch-action: manipulation;
      touch-action: manipulation;
  cursor: pointer;
  background-image: none;
  border: 2px solid transparent;
  white-space: nowrap; }
  .btn:hover, .btn:focus {
    text-decoration: none; }
  .btn:active {
    outline: 0;
    background-image: none; }
  .btn.disabled, .btn[disabled],
  fieldset[disabled] .btn {
    cursor: not-allowed;
    opacity: 0.3; }

a.btn.disabled,
fieldset[disabled] a.btn {
  pointer-events: none; }

.btn-default {
  height: 40px;
  line-height: 2.2em;
  padding: 0 30px;
  border: 2px solid #e9212d; }

.btn-b1 {
  color: #e9212d;
  background: none;
  border: 2px solid #e9212d; }
  .btn-b1:hover {
    color: #fff;
    background-color: #e9212d; }

.btn-b2 {
  color: rgba(51, 51, 51, 0.3);
  background-color: #e9212d; }

.btn-b3 {
  color: #fff;
  background-color: #e9212d; }
  .btn-b3:hover {
    color: #e9212d;
    background: none; }

.youtube-video {
  position: relative;
  width: 50%;
  height: 0;
  padding-bottom: 28.125%;
  margin: 30px auto; }
  .youtube-video > div {
    position: absolute;
    top: 0;
    left: 0;
    height: 56%;
    width: 100%; }
  .youtube-video .video-tn img {
    display: block;
    width: 100%;
    cursor: pointer;
    z-index: 2;
    margin: 0 !important; }
  .youtube-video .video-wrapper {
    display: none;
    width: 100%;
    height: 0;
    padding-bottom: 56.25%;
    z-index: 1; }
    .youtube-video .video-wrapper iframe {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%; }

/* line numbers for code snippets */
pre.line-numbers {
  counter-reset: line-numbers; }
  pre.line-numbers .code-line {
    padding-left: 10px; }
  pre.line-numbers .code-line:before {
    counter-increment: line-numbers;
    content: counter(line-numbers);
    padding-right: 30px;
    color: #ccc; }

/*
 Solarized Color Schemes originally by Ethan Schoonover
 http://ethanschoonover.com/solarized

 Ported for PrismJS by Hector Matos
 Website: https://krakendev.io
 Twitter Handle: https://twitter.com/allonsykraken)
*/
/*
SOLARIZED HEX
--------- -------
base03    #002b36
base02    #073642
base01    #586e75
base00    #657b83
base0     #839496
base1     #93a1a1
base2     #eee8d5
base3     #fdf6e3
yellow    #b58900
orange    #cb4b16
red       #dc322f
magenta   #d33682
violet    #6c71c4
blue      #268bd2
cyan      #2aa198
green     #859900
*/
code[class*="language-"],
pre[class*="language-"] {
  color: #657b83;
  /* base00 */
  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.5;
  -moz-tab-size: 4;
  tab-size: 4;
  -webkit-hyphens: none;
  -ms-hyphens: none;
  hyphens: none; }

pre[class*="language-"]::-moz-selection, pre[class*="language-"] ::-moz-selection,
code[class*="language-"]::-moz-selection, code[class*="language-"] ::-moz-selection {
  background: #efefef;
  /* base02 */ }

pre[class*="language-"]::selection, pre[class*="language-"] ::selection,
code[class*="language-"]::selection, code[class*="language-"] ::selection {
  background: #efefef;
  /* base02 */ }

/* Code blocks */
pre[class*="language-"] {
  padding: 0 1em 1em;
  margin: .5em 0;
  overflow: auto;
  border-radius: 0; }

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
  background-color: #efefef;
  /* base3 */ }

/* Inline code */
:not(pre) > code[class*="language-"] {
  padding: .1em;
  border-radius: .3em; }

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: #93a1a1;
  /* base1 */ }

.token.punctuation {
  color: #586e75;
  /* base01 */ }

.namespace {
  opacity: .7; }

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  color: #268bd2;
  /* blue */ }

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.url,
.token.inserted {
  color: #2aa198;
  /* cyan */ }

.token.entity {
  color: #657b83;
  /* base00 */
  background: #eee8d5;
  /* base2 */ }

.token.atrule,
.token.attr-value,
.token.keyword {
  color: #859900;
  /* green */ }

.token.function {
  color: #b58900;
  /* yellow */ }

.token.regex,
.token.important,
.token.variable {
  color: #cb4b16;
  /* orange */ }

.token.important,
.token.bold {
  font-weight: bold; }

.token.italic {
  font-style: italic; }

.token.entity {
  cursor: help; }

.loader,
.loader:after {
  border-radius: 50%;
  width: 10em;
  height: 10em; }

.loader {
  margin: 60px auto;
  font-size: 10px;
  position: relative;
  text-indent: -9999em;
  border-top: 1.1em solid rgba(239, 22, 20, 0.2);
  border-right: 1.1em solid rgba(239, 22, 20, 0.2);
  border-bottom: 1.1em solid rgba(239, 22, 20, 0.2);
  border-left: 1.1em solid #ef1614;
  transform: translateZ(0);
  animation: load8 1.1s infinite linear; }

@keyframes load8 {
  0% {
    transform: rotate(0deg); }
  100% {
    transform: rotate(360deg); } }

.top-message {
  width: 100%;
  height: 50px;
  line-height: 50px;
  padding: 0 20px;
  text-align: center;
  color: #666;
  background-color: #f5f5f5;
  overflow: hidden; }
  .top-message span {
    display: inline;
    font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-weight: 300;
    font-size: 1.125em;
    line-height: inherit;
    color: inherit;
    text-decoration: none; }
    .top-message span a {
      font-size: inherit; }

.navActive .top-message {
  display: none; }

@media (max-width: 506px) {
  .top-message {
    line-height: 1.2;
    padding-top: 4px; } }

.header-wrapper {
  height: 100px; }

header {
  position: fixed;
  top: 0;
  z-index: 1000;
  width: 100%;
  height: 100px;
  background-color: #333333;
  padding: 0 30px;
  transition: background-color 0.5s; }

.has-page-banner header {
  background-color: rgba(51, 51, 51, 0.3); }

header.noOpacity {
  background-color: #333333; }

.top-message + .header-wrapper > header {
  position: static; }
  .top-message + .header-wrapper > header.isFixed {
    position: fixed;
    top: 0;
    z-index: 1000; }

.has-full-page-banner .top-message + .header-wrapper > header,
.has-page-banner .top-message + .header-wrapper > header {
  position: absolute;
  top: 50px;
  z-index: 2;
  transition: all 0.5s; }
  .has-full-page-banner .top-message + .header-wrapper > header.isFixed,
  .has-page-banner .top-message + .header-wrapper > header.isFixed {
    position: fixed;
    top: 0;
    z-index: 1000; }

.has-full-page-banner .top-message + .header-wrapper + .banner,
.has-page-banner .top-message + .header-wrapper + .banner {
  top: 50px; }

.has-full-page-banner.navActive .top-message + .header-wrapper > header,
.has-page-banner.navActive .top-message + .header-wrapper > header {
  top: 0; }

.brand {
  position: relative;
  z-index: 1001;
  display: block;
  max-width: 80px;
  float: left; }
  .brand .main-logo {
    display: block;
    max-width: 80px;
    margin-top: 10px; }

.main-navigation {
  margin-top: 25px;
  color: #fff; }
  .main-navigation .main-menu {
    margin: 0;
    clear: both; }
    .main-navigation .main-menu > li {
      padding: 0 0 10px; }
      .main-navigation .main-menu > li > a,
      .main-navigation .main-menu > li > a:focus,
      .main-navigation .main-menu > li > span {
        display: block;
        color: #fff;
        font-size: .875em;
        font-weight: 600;
        text-transform: uppercase;
        padding: 0 10px;
        line-height: 2.125;
        text-decoration: none;
        outline: none; }
        .main-navigation .main-menu > li > a:hover,
        .main-navigation .main-menu > li > a:focus:hover,
        .main-navigation .main-menu > li > span:hover {
          color: red;
          text-decoration: none; }
        .main-navigation .main-menu > li > a .icon,
        .main-navigation .main-menu > li > a:focus .icon,
        .main-navigation .main-menu > li > span .icon {
          display: none; }
      .main-navigation .main-menu > li:hover > a,
      .main-navigation .main-menu > li:hover > a:focus {
        color: red; }
      .main-navigation .main-menu > li > .dropdown-menu {
        top: 90%;
        background-color: rgba(0, 0, 0, 0.7);
        border-radius: 0;
        padding: 5px 0 0; }
        .main-navigation .main-menu > li > .dropdown-menu > li > a {
          font-size: 0.875em;
          color: #fff;
          padding: 10px 20px; }
          .main-navigation .main-menu > li > .dropdown-menu > li > a:hover {
            color: red;
            background-color: #262626; }

.mobile-navigation {
  display: none; }

.hamburger {
  position: relative;
  width: 35px;
  height: 35px;
  cursor: pointer;
  display: none;
  background: none;
  border: none; }
  .hamburger:focus {
    outline: 0; }
  .hamburger span,
  .hamburger span:before,
  .hamburger span:after {
    cursor: pointer;
    border-radius: 1px;
    height: 5px;
    width: 35px;
    background: white;
    position: absolute;
    top: 15px;
    display: block;
    content: '';
    transition: all 500ms ease-in-out; }
  .hamburger span:before {
    top: -10px; }
  .hamburger span:after {
    top: auto;
    bottom: -10px; }
  .hamburger:hover span,
  .hamburger:hover span:before,
  .hamburger:hover span:after {
    background: #ff0; }

.navActive .hamburger span {
  background-color: transparent; }

.navActive .hamburger span:before,
.navActive .hamburger span:after {
  top: 0; }

.navActive .hamburger span:before {
  transform: rotate(45deg); }

.navActive .hamburger span:after {
  transform: rotate(-45deg); }

.navActive .hamburger:hover span:before,
.navActive .hamburger:hover span:after {
  background: #ff0; }

@media (max-width: 768px) {
  header {
    padding: 0 30px; }
  .brand {
    position: relative;
    max-width: 100%;
    width: 100%;
    height: 100px;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: row nowrap;
        flex-flow: row nowrap;
    -ms-flex-align: center;
        align-items: center;
    -ms-flex-pack: justify;
        justify-content: space-between; }
    .brand .main-logo {
      position: static; }
      .brand .main-logo img {
        display: block; }
    .brand .hamburger {
      display: block;
      padding: 0 30px 6px 0; }
  .main-navigation {
    display: none; }
  .mobile-navigation {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1000;
    padding-bottom: 50px;
    background-color: rgba(51, 51, 51, 0.97);
    margin: 0 0;
    display: none; }
    .mobile-navigation .main-menu {
      height: 100%;
      overflow: scroll;
      padding: 0 40px 100px;
      float: none;
      margin-top: 200px;
      transition: all 1s; }
      .mobile-navigation .main-menu > li a, .mobile-navigation .main-menu > li span {
        display: block;
        font-size: 1.5em;
        line-height: 3em;
        color: #f00;
        padding-left: 30px; }
        .mobile-navigation .main-menu > li a:hover, .mobile-navigation .main-menu > li span:hover {
          cursor: pointer;
          background-color: rgba(0, 0, 0, 0.7); }
      .mobile-navigation .main-menu .dropdown-menu {
        position: static;
        float: none;
        border: none;
        padding-bottom: 20px;
        background: none; }
        .mobile-navigation .main-menu .dropdown-menu a {
          font-size: 1.14286em;
          line-height: 3em;
          color: #f00;
          padding-left: 60px; }
    .mobile-navigation li {
      display: block; }
      .mobile-navigation li.has-bottom-border {
        border-bottom: 1px solid #f00; }
  .top-message + header .main-navigation {
    top: 150px; }
  .navActive {
    overflow: hidden; }
    .navActive .top-message {
      display: none; }
    .navActive header {
      background-color: rgba(51, 51, 51, 0.97); }
    .navActive .mobile-navigation .main-menu {
      margin-top: 150px; }
      .navActive .mobile-navigation .main-menu > li > a .icon,
      .navActive .mobile-navigation .main-menu > li > span .icon {
        font-size: 18px;
        line-height: 34px; }
        .navActive .mobile-navigation .main-menu > li > a .icon.icon-chevron-south, .navActive .mobile-navigation .main-menu > li > a .icon.icon-chevron-east,
        .navActive .mobile-navigation .main-menu > li > span .icon.icon-chevron-south,
        .navActive .mobile-navigation .main-menu > li > span .icon.icon-chevron-east {
          display: inline-block; }
        .navActive .mobile-navigation .main-menu > li > a .icon.icon-chevron-north,
        .navActive .mobile-navigation .main-menu > li > span .icon.icon-chevron-north {
          display: none; }
      .navActive .mobile-navigation .main-menu > li.stayOpen > a .icon.icon-chevron-south,
      .navActive .mobile-navigation .main-menu > li.stayOpen > span .icon.icon-chevron-south {
        display: none; }
      .navActive .mobile-navigation .main-menu > li.stayOpen > a .icon.icon-chevron-north,
      .navActive .mobile-navigation .main-menu > li.stayOpen > span .icon.icon-chevron-north {
        display: inline-block; } }

@media (max-width: 400px) {
  .top-message {
    display: none; }
  .has-page-banner .top-message {
    display: none; }
    .has-page-banner .top-message + .header-wrapper + .banner {
      top: 0; }
      .has-page-banner .top-message + .header-wrapper + .banner > header {
        top: 0; } }

.banner.has-video, .banner.has-image {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  width: 100vw;
  height: 400px;
  overflow: hidden; }
  .banner.has-video video,
  .banner.has-video img, .banner.has-image video,
  .banner.has-image img {
    width: 100%;
    height: 100%;
    object-fit: cover; }

.has-full-page-banner .banner.has-video {
  height: 100vh; }

.banner-content-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-line-pack: end;
      align-content: flex-end;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  color: #bbb;
  height: 100%;
  width: 100%; }
  .banner-content-wrapper .banner-content {
    width: 50%;
    text-align: center;
    margin: auto; }
    .banner-content-wrapper .banner-content > * {
      color: #fff; }
    .banner-content-wrapper .banner-content .page-title {
      text-transform: uppercase; }
    .banner-content-wrapper .banner-content h2 {
      font-style: italic; }
    .banner-content-wrapper .banner-content p {
      line-height: 1.5; }

.banner-content-has-light-background .banner-content {
  background-color: rgba(255, 255, 255, 0.8); }
  .banner-content-has-light-background .banner-content > * {
    color: #333; }

.content-wrapper {
  clear: both;
  padding: 0 30px; }

.banner + .content-wrapper {
  position: relative; }

.has-page-banner .banner + .content-wrapper {
  margin-top: 300px; }

.has-full-page-banner .banner + .content-wrapper {
  margin-top: 100vh; }

p > strong {
  text-transform: uppercase;
  font-size: 0.75em; }

.content-pagination {
  text-align: center;
  margin: 20px 0; }
  .content-pagination a, .content-pagination span {
    position: relative;
    display: inline-block;
    margin: 0 20px; }
    .content-pagination a:first-child, .content-pagination span:first-child {
      padding-left: 0; }
    .content-pagination a.activePage, .content-pagination span.activePage {
      font-weight: 700; }
  .content-pagination .activePage {
    color: #ff0; }
    .content-pagination .activePage:after {
      content: "";
      display: block;
      position: absolute;
      top: -4px;
      left: -10px;
      width: 30px;
      height: 30px;
      border-radius: 15px;
      border: 2px solid #ff0; }

.dropdown {
  position: relative; }

.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1000;
  display: none;
  float: left;
  min-width: 160px;
  padding: 5px 0;
  margin: 2px 0 0;
  list-style: none;
  font-size: 100%;
  text-align: left;
  background-color: #fff;
  border-radius: 0;
  box-shadow: 0px 2px 18px 0px rgba(50, 50, 50, 0.75); }
  .dropdown-menu.pull-right {
    right: 0;
    left: auto; }
  .dropdown-menu > li > a {
    display: block;
    padding: 3px 20px;
    clear: both;
    font-weight: normal;
    line-height: 1em;
    color: #333;
    white-space: nowrap; }

.dropdown-menu > li > a:hover, .dropdown-menu > li > a:focus {
  text-decoration: none;
  background-color: #262626; }

.dropdown-menu > .active > a, .dropdown-menu > .active > a:hover, .dropdown-menu > .active > a:focus {
  color: #333;
  text-decoration: none;
  outline: 0;
  background-color: #fff; }

.dropdown-menu > .disabled > a, .dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus {
  color: #999; }

.dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus {
  text-decoration: none;
  background-color: transparent;
  background-image: none;
  cursor: not-allowed; }

ul, ol {
  margin: 20px 0; }
  ul li, ol li {
    color: inherit;
    padding-bottom: 10px;
    line-height: 1.4; }

.list-unstyled {
  padding-left: 0;
  list-style: none; }

.list-inline {
  padding-left: 0;
  list-style: none; }
  .list-inline > li {
    display: inline-block;
    padding: 0 5px; }

dl {
  margin: 0 0 1em; }

dt,
dd {
  line-height: 1em; }

dt {
  font-weight: bold; }

dd {
  margin-left: 0; }

footer {
  color: #bbb; }

.footer-main-wrapper {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  padding: 2em 30px; }

.footer-col {
  -ms-flex: 1 1 16%;
      flex: 1 1 16%;
  margin-top: 0;
  padding: 0 5px; }
  .footer-col.contact-info {
    -ms-flex: 1 1 20%;
        flex: 1 1 20%; }
  .footer-col img {
    display: block;
    max-width: 80%;
    height: auto;
    position: relative;
    top: -19px; }
  .footer-col li {
    color: #bbb;
    padding: 7px 0;
    margin: 0; }
  .footer-col .col-header {
    text-transform: uppercase;
    font-size: 0.875em;
    font-weight: 400;
    color: #fff;
    padding-top: 0; }
  .footer-col a {
    color: inherit; }
    .footer-col a:hover {
      color: #ff0;
      text-decoration: none; }

.vcard li:first-child {
  width: 100px; }

@media (max-width: 1000px) {
  .footer-main-wrapper {
    display: none; } }

.footer-promo-wrapper {
  text-align: center;
  padding-bottom: 70px; }
  .footer-promo-wrapper h2 {
    font-size: 1.75em;
    line-height: 1.607;
    text-transform: uppercase;
    color: #bbb;
    font-weight: 300; }
    @media (max-width: 400px) {
      .footer-promo-wrapper h2 {
        padding: 0 30px;
        font-size: 1.5em; } }

.bottom-stripe {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  width: 100%;
  padding: 10px 30px 0;
  color: #999;
  background-color: rgba(51, 51, 51, 0.3);
  border-top: 1px solid #ccc;
  font-size: 0.75em; }
  .bottom-stripe :first-child {
    -ms-flex-order: 2;
        order: 2; }
    .bottom-stripe :first-child > li {
      vertical-align: top; }
  .bottom-stripe :last-child {
    -ms-flex-order: 1;
        order: 1; }
  .bottom-stripe a {
    color: inherit; }
    .bottom-stripe a:hover {
      color: #ff0;
      text-decoration: none; }
  .bottom-stripe .social-link {
    margin-left: 10px; }
    .bottom-stripe .social-link a {
      display: block;
      position: relative;
      top: -8px;
      height: 34px;
      width: 34px;
      border: 1px solid #ccc;
      color: #bbb;
      text-align: center; }
      .bottom-stripe .social-link a:hover {
        background-color: #ff0; }
      .bottom-stripe .social-link a i {
        font-size: 18px;
        line-height: 34px; }
      .bottom-stripe .social-link a .icon-linkedin {
        font-size: 24px; }

@media (max-width: 900px) {
  .bottom-stripe {
    -ms-flex-wrap: wrap-reverse;
        flex-wrap: wrap-reverse;
    text-align: center;
    line-height: 2; } }

.nav-item-1 .nav-item-1-link > a,
.nav-item-2 .nav-item-2-link > a,
.nav-item-3 .nav-item-3-link > a {
  color: #f00 !important;
  cursor: default; }

#toTop {
  display: block;
  position: fixed;
  bottom: 20px;
  right: 20px;
  z-index: 1000;
  transition: all .5s ease 0s;
  cursor: pointer;
  width: 60px;
  height: 60px;
  border: 1px solid #ccc;
  line-height: 60px;
  text-align: center;
  background-color: rgba(255, 255, 255, 0.8);
  color: #f00; }

#overlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1000;
  background-color: rgba(255, 255, 255, 0.95);
  width: 100%;
  display: none; }
  #overlay .icon-close {
    position: absolute;
    top: 30px;
    right: 50px;
    font-size: 30px;
    color: #000; }
    #overlay .icon-close:hover {
      cursor: pointer;
      color: #f00; }
  #overlay .responsive-wrapper {
    margin: 20% auto 0;
    max-width: 800px;
    width: 80%; }
  #overlay .video-container {
    position: relative;
    width: 100%;
    height: 0;
    padding-bottom: 56.25%;
    border: 1px solid #aaa; }
    #overlay .video-container iframe {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%; }
    #overlay .video-container.is-image {
      border: none; }
      #overlay .video-container.is-image img {
        width: 100%;
        max-width: auto; }

.inline-video-link {
  display: inline-block;
  height: 1.4em;
  width: 1.4em;
  line-height: 1.3;
  text-align: center;
  padding-left: 0.1em;
  font-size: 0.75em;
  border: 1px solid #f00;
  border-radius: 0.7em;
  margin: 0 0.5em; }

.has-sidebar .content-wrapper .container {
  display: -ms-flexbox;
  display: flex; }
  .has-sidebar .content-wrapper .container h1 {
    width: 100%;
    padding: 10px 15px 10px 0; }

.blog-post .content-wrapper .container h1 {
  font-size: 1.725em;
  font-weight: 300;
  line-height: 1.5;
  padding: 0 15px 0 0;
  margin: 15px 0; }

.has-sidebar .main {
  -ms-flex: 0 1 50%;
      flex: 0 1 50%;
  padding: 0 15px; }

.has-sidebar .sidebar {
  -ms-flex: 0 1 50%;
      flex: 0 1 50%;
  padding: 0 15px 50px 50px;
  background-color: #f9f9f9; }
  .has-sidebar .sidebar h3 {
    font-size: 1em;
    padding-bottom: 20px; }

.has-sidebar.blog-post .main, .has-sidebar.blog .main {
  -ms-flex: 0 1 70%;
      flex: 0 1 70%;
  padding: 70px 10% 0 0;
  overflow: hidden; }

.has-sidebar.blog-post .sidebar, .has-sidebar.blog .sidebar {
  -ms-flex: 0 1 30%;
      flex: 0 1 30%;
  padding: 70px 15px 50px; }

.has-sidebar.blog-post .main {
  position: relative;
  padding-left: 10%; }
  .has-sidebar.blog-post .main .page-socials {
    position: absolute;
    top: 100px;
    left: 30px; }

.has-sidebar.is-tag-page .main {
  padding-top: 0; }

.has-sidebar.is-tag-page .sidebar {
  padding-top: 30px; }

@media (max-width: 1330px) {
  .has-sidebar.blog .main {
    padding: 70px 10% 0 30px; } }

@media (max-width: 768px) {
  .has-sidebar .content-wrapper .container {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
  .has-sidebar .main {
    -ms-flex: 1 1 100%;
        flex: 1 1 100%; }
  .has-sidebar .sidebar {
    -ms-flex: 1 1 100%;
        flex: 1 1 100%;
    padding: 0 30px;
    margin-bottom: 50px; }
    .has-sidebar .sidebar h1 {
      text-align: center; }
  .has-sidebar.blog-post .main, .has-sidebar.blog .main {
    -ms-flex: 0 1 100%;
        flex: 0 1 100%;
    padding: 30px 15px 0; }
  .has-sidebar.blog-post .sidebar, .has-sidebar.blog .sidebar {
    -ms-flex: 0 1 100%;
        flex: 0 1 100%;
    padding: 0 15px; }
  .has-sidebar.blog .main {
    padding: 0 15px 0; }
  .has-sidebar.blog-post .main .page-socials {
    position: static; } }

.bloglist > li {
  display: -ms-flexbox;
  display: flex; }
  .bloglist > li .featured-image {
    -ms-flex: 0 1 45%;
        flex: 0 1 45%; }
  .bloglist > li .blog-post-meta {
    -ms-flex: 0 1 55%;
        flex: 0 1 55%;
    padding-left: 20px;
    margin-top: 0; }

.bloglist ul {
  margin-bottom: 40px; }
  .bloglist ul li {
    margin-bottom: 10px; }
    .bloglist ul li.bloglist-blog-title {
      font: 400 1.25em/1.5 "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
      padding-bottom: 10px;
      margin-bottom: 0; }
      .bloglist ul li.bloglist-blog-title a {
        color: #333; }
        .bloglist ul li.bloglist-blog-title a:hover {
          text-decoration: none;
          color: #ff0; }
  .bloglist ul .tags a {
    padding-right: 10px;
    color: #bbb; }
    .bloglist ul .tags a:hover {
      text-decoration: none;
      color: #ff0; }

.featured-image a img {
  border: 2px solid transparent; }

.featured-image a:hover {
  text-decoration: none;
  color: #ff0; }
  .featured-image a:hover img {
    border: 2px solid #ff0; }

.read-more-link {
  font-size: 0.875em;
  font-weight: 600;
  color: #333; }
  .read-more-link span {
    font-size: 1.5em;
    position: relative;
    top: 1px; }
  .read-more-link:hover {
    text-decoration: none;
    color: #ff0; }

.blog-date-author {
  color: #bbb; }

.blog-post-title a {
  color: #333; }
  .blog-post-title a:hover {
    text-decoration: none;
    color: #ff0; }

.tag-link {
  display: inline-block;
  padding: 3px 20px;
  font-size: 0.875em;
  background-color: #fff;
  border: 1px solid #ccc;
  color: #333;
  margin: 0 5px 10px 0; }

.author-portrait {
  width: 100%; }

.multiple-authors:after {
  content: ","; }

.multiple-authors:last-child:after {
  content: ""; }

.blog-post .main {
  padding: 0 30px; }
  .blog-post .main img {
    max-width: 100%;
    margin: 20px 0; }
  .blog-post .main .author-portrait-wrapper {
    width: 70px;
    height: 70px;
    border-radius: 35px;
    float: left; }
    .blog-post .main .author-portrait-wrapper img {
      margin: 0; }
  .blog-post .main .author-name,
  .blog-post .main .author-bio {
    padding-left: 90px; }

.blog-post .sidebar {
  padding: 0 20px; }

.blog-post h1 {
  font: 300 2.875em/1.2 "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif; }

.blog-post .author-data {
  margin-bottom: 50px; }
  .blog-post .author-data li {
    line-height: 1.8;
    margin-bottom: 20px; }
  .blog-post .author-data img {
    display: block; }
  .blog-post .author-data .author-name {
    font-size: 1em;
    font-weight: 600;
    margin: 0; }
  .blog-post .author-data .author-bio {
    font-weight: 300; }
  .blog-post .author-data i {
    display: inline-block;
    position: relative;
    width: 30px;
    height: 30px;
    line-height: 30px;
    border-radius: 15px;
    background-color: #eaeaea;
    color: default-text-color;
    text-align: center;
    margin-right: 10px;
    transition: background-color 0.5s; }
    .blog-post .author-data i:hover {
      background-color: #ff0; }
    .blog-post .author-data i.icon-envelope:before {
      position: relative;
      top: 2px; }

hr {
  border: none;
  height: 1px;
  background: #d6d9db; }

.list-blog-posts {
  margin: -20px 0 80px; }
  .list-blog-posts > li {
    border-bottom: 1px solid #ccc; }
    .list-blog-posts > li > ul {
      margin-bottom: 0; }

.author-portrait-wrapper {
  width: 130px;
  height: 130px;
  border-radius: 75px;
  overflow: hidden; }

@media (max-width: 768px) {
  .blog-post .author-data {
    margin-bottom: 0; } }

@media (max-width: 450px) {
  .bloglist > li {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
    .bloglist > li .featured-image {
      -ms-flex: 0 1 100%;
          flex: 0 1 100%;
      margin-bottom: 20px; }
    .bloglist > li .blog-post-meta {
      -ms-flex: 0 1 100%;
          flex: 0 1 100%;
      padding-left: 0;
      margin-bottom: 0; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
